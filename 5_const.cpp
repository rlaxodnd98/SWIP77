// 5_const.cpp
#include <iostream>
using namespace std;

// 1. C의 const와 C++의 const는 차이가 있습니다.
// - C의 상수는 런타임 상수입니다.
// - C++의 상수는 컴파일 타임 상수/런타임 상수가 될 수 있습니다.

// 2. 상수 표현식
// - 컴파일러는 컴파일 시간에 미리 계산할 수 있는 것은 계산을 수행합니다.
//  https://www.godbolt.org
// - C/C++에서 배열의 크기는 상수 표현식이 필요합니다.
#if 0
int main()
{
    int a = 10 + 5;
    cout << a << endl;
}
#endif

// C++11, constexpr
//  : 상수 표현식에 지정할 수 있는 키워드입니다.
int main()
{
    // constexpr const int c1 = 100; /* OK */
    constexpr int c1 = 100; /* OK */
    // 컴파일 타임 상수
    // : - 상수의 초기값이 컴파일 시간에 결정된다면, 컴파일 상수입니다.
    //   - 컴파일 타임 상수는 상수 표현식입니다.
    //   - 컴파일 타임 상수에 대한 접근은 메모리로부터 읽는 연산이
    //     필요하지 않습니다.

    int n = 1000;
    // constexpr const int c2 = n; /* Error */
    const int c2 = n;
    // 런타임 상수
    // : - 상수의 초기값이 컴파일 시간에 결정될 수 없다면,
    //     변수이지만 실행 시간에 값을 변경할 수 없는 런타임 상수입니다.
    //   - 런타임 상수는 상수 표현식이 아니기 때문에, 상수 표현식이 필요한
    //     배열의 크기를 지정하는 용도로 사용할 수 없습니다.
    //   - 런타임 상수에 대한 접근은 메모리로부터 값을 읽어야 합니다.
}
